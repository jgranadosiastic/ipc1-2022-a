/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jgranados.ipc1_a_2022.poo.avanzado.tragamonedas.ui;

import com.jgranados.ipc1_a_2022.poo.avanzado.tragamonedas.backend.ControladorImagenesHilo;
import com.jgranados.ipc1_a_2022.poo.avanzado.tragamonedas.backend.ModoJuego;
import com.jgranados.ipc1_a_2022.poo.avanzado.tragamonedas.backend.ModoJuegoFacil;
import com.jgranados.ipc1_a_2022.poo.avanzado.tragamonedas.backend.ModoJuegoNormal;
import com.jgranados.ipc1_a_2022.poo.avanzado.tragamonedas.backend.ModoJuegoPro;
import com.jgranados.ipc1_a_2022.poo.avanzado.tragamonedas.backend.exception.TragamonedasException;
import com.jgranados.ipc1_a_2022.poo.avanzado.tragamonedas.ui.imagenes.Imagen;
import com.jgranados.ipc1_a_2022.poo.avanzado.tragamonedas.ui.imagenes.ImagenHilo;
import javax.swing.JOptionPane;

/**
 *
 * @author jose
 */
public class TragamonedasFrame extends javax.swing.JFrame {

    private ModoJuego modoJuego;
    private Imagen[] imagenes;
    private ImagenHilo[] imagenesHilo;
    private int saldo;
    private int cantidadApostada;

    /**
     * Creates new form TragamonedasFrame
     */
    public TragamonedasFrame() {
        initComponents();
        reiniciarJuego();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contenedorImagenesPanel = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jugarBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cantidadInicialSpnr = new javax.swing.JSpinner();
        aceptarMonedasBtn = new javax.swing.JButton();
        retirarseBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cantidadApostarSpnr = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        saldoLbl = new javax.swing.JLabel();
        menuPrincipal = new javax.swing.JMenuBar();
        juegoMenu = new javax.swing.JMenu();
        facilMenuItem = new javax.swing.JMenuItem();
        normalMenuItem = new javax.swing.JMenuItem();
        proMenuItem = new javax.swing.JMenuItem();
        acercaDeMenu = new javax.swing.JMenu();
        ayudaMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        contenedorImagenesPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jugarBtn.setText("Jugar");
        jugarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jugarBtnActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingresar Monedas para Jugar"));

        cantidadInicialSpnr.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        cantidadInicialSpnr.setEditor(new javax.swing.JSpinner.NumberEditor(cantidadInicialSpnr, ""));

        aceptarMonedasBtn.setText("Aceptar");
        aceptarMonedasBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarMonedasBtnActionPerformed(evt);
            }
        });

        retirarseBtn.setText("Retirarse");
        retirarseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retirarseBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cantidadInicialSpnr)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(retirarseBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(aceptarMonedasBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 173, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cantidadInicialSpnr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(aceptarMonedasBtn)
                .addGap(18, 18, 18)
                .addComponent(retirarseBtn)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Moneadas a apostar"));

        cantidadApostarSpnr.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jLabel1.setText("Saldo:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cantidadApostarSpnr)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(saldoLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cantidadApostarSpnr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(saldoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        juegoMenu.setText("Juego");

        facilMenuItem.setText("Facil");
        facilMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facilMenuItemActionPerformed(evt);
            }
        });
        juegoMenu.add(facilMenuItem);

        normalMenuItem.setText("Normal");
        normalMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normalMenuItemActionPerformed(evt);
            }
        });
        juegoMenu.add(normalMenuItem);

        proMenuItem.setText("Pro");
        proMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proMenuItemActionPerformed(evt);
            }
        });
        juegoMenu.add(proMenuItem);

        menuPrincipal.add(juegoMenu);

        acercaDeMenu.setText("Acerca de...");
        menuPrincipal.add(acercaDeMenu);

        ayudaMenu.setText("Ayuda");
        menuPrincipal.add(ayudaMenu);

        setJMenuBar(menuPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contenedorImagenesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(223, 223, 223)
                .addComponent(jugarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(contenedorImagenesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jugarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jugarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jugarBtnActionPerformed
        cantidadApostada = Integer.valueOf(cantidadApostarSpnr.getValue().toString());
        /*if (modoJuego.obtenerSaldo() <= 0) {
            JOptionPane.showMessageDialog(
                    this,
                    "Ya no tienes saldo",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
        } else if (modoJuego.obtenerSaldo() < cantidadApostada) {
            JOptionPane.showMessageDialog(
                    this,
                    "No puedes apostar eso",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
        } else {
            ejecutarJugada();
        }*/
        try {
            ejecutarJugadaExcepciones();
        } catch (TragamonedasException e) {
            JOptionPane.showMessageDialog(
                    this,
                    e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
        }

    }//GEN-LAST:event_jugarBtnActionPerformed

    private void facilMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facilMenuItemActionPerformed
        modoJuego = new ModoJuegoFacil(saldo);
        inicializarJuego("Facil");
    }//GEN-LAST:event_facilMenuItemActionPerformed

    private void aceptarMonedasBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarMonedasBtnActionPerformed
        saldo = Integer.valueOf(cantidadInicialSpnr.getValue().toString());
        if (saldo <= 0) {
            JOptionPane.showMessageDialog(
                    this,
                    "La cantidad debe ser mayor a cero",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
        } else {
            JOptionPane.showMessageDialog(
                    this,
                    "Ahora seleccione el modo de jueto. Su saldo es de: " + saldo,
                    "Juego iniciado",
                    JOptionPane.INFORMATION_MESSAGE
            );
            activarModosJuego();
            bloquearEntradaMonedas();
        }
    }//GEN-LAST:event_aceptarMonedasBtnActionPerformed

    private void normalMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalMenuItemActionPerformed
        modoJuego = new ModoJuegoNormal(saldo);
        inicializarJuego("Normal");
    }//GEN-LAST:event_normalMenuItemActionPerformed

    private void proMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proMenuItemActionPerformed
        modoJuego = new ModoJuegoPro(saldo);
        inicializarJuego("Pro");
    }//GEN-LAST:event_proMenuItemActionPerformed

    private void retirarseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retirarseBtnActionPerformed
        JOptionPane.showMessageDialog(
                this,
                "Te retiras con la siguiente cantidad de monedas: " + modoJuego.obtenerSaldo(),
                "Juego finalizado",
                JOptionPane.INFORMATION_MESSAGE
        );
        reiniciarJuego();
    }//GEN-LAST:event_retirarseBtnActionPerformed

    private void inicializarJuego(String modo) {
        JOptionPane.showMessageDialog(
                this,
                "Se ha iniciado el modo "+ modo +", ingrese su apuesta y presione el boton Jugar",
                "Juego iniciado",
                JOptionPane.INFORMATION_MESSAGE
        );
        actualizarSaldo();
        bloquearModosJuego();
        activarControlesApuesta();
    }

    private void ejecutarJugada() {
        imagenes = modoJuego.obtenerImagenes();
        desplegarImagenes();
        procesarGanancia();
        actualizarSaldo();
    }

    private void ejecutarJugadaExcepciones() throws TragamonedasException {
        imagenesHilo = modoJuego.obtenerImagenesManejoExcepciones();
        ControladorImagenesHilo controladorHilos = new ControladorImagenesHilo(imagenesHilo, this);
        controladorHilos.start();
        //desplegarImagenesHilos();
        //procesarGananciaExcepciones();
        //actualizarSaldo();
    }

    private void desplegarImagenes() {
        contenedorImagenesPanel.removeAll();
        for (Imagen imagen : imagenes) {
            contenedorImagenesPanel.add(imagen);
        }
        contenedorImagenesPanel.validate();
        contenedorImagenesPanel.repaint();
    }
    
    public void desplegarImagenesHilos() {
        contenedorImagenesPanel.removeAll();
        for (ImagenHilo imagen : imagenesHilo) {
            contenedorImagenesPanel.add(imagen);
            Thread imagenHilo = new Thread(imagen);
            imagenHilo.start();
        }
        contenedorImagenesPanel.validate();
        contenedorImagenesPanel.repaint();
    }
    
    private void procesarGanancia() {
        int ganancia = modoJuego.obtenerGanancia(
                cantidadApostada,
                imagenes
        );

        if (ganancia < 0) {
            JOptionPane.showMessageDialog(
                    this,
                    "Perdiste " + Math.abs(ganancia) + " monedas",
                    "Perdiste",
                    JOptionPane.ERROR_MESSAGE
            );
        } else {
            JOptionPane.showMessageDialog(
                    this,
                    "Ganaste " + Math.abs(ganancia) + " monedas",
                    "Perdiste",
                    JOptionPane.INFORMATION_MESSAGE
            );
        }
    }

    public void procesarGananciaExcepciones() throws TragamonedasException {
        int ganancia = modoJuego.obtenerGananciaManejoExcepciones(
                cantidadApostada,
                imagenesHilo
        );

        if (ganancia < 0) {
            JOptionPane.showMessageDialog(
                    this,
                    "Perdiste " + Math.abs(ganancia) + " monedas",
                    "Perdiste",
                    JOptionPane.ERROR_MESSAGE
            );
        } else {
            JOptionPane.showMessageDialog(
                    this,
                    "Ganaste " + Math.abs(ganancia) + " monedas",
                    "Perdiste",
                    JOptionPane.INFORMATION_MESSAGE
            );
        }
    }

    public void actualizarSaldo() {
        saldoLbl.setText("" + modoJuego.obtenerSaldo());
    }

    private void activarModosJuego() {
        facilMenuItem.setEnabled(true);
        normalMenuItem.setEnabled(true);
        proMenuItem.setEnabled(true);
    }

    private void bloquearModosJuego() {
        facilMenuItem.setEnabled(false);
        normalMenuItem.setEnabled(false);
        proMenuItem.setEnabled(false);
    }

    private void bloquearEntradaMonedas() {
        cantidadInicialSpnr.setEnabled(false);
        aceptarMonedasBtn.setEnabled(false);
    }

    public void activarControlesApuesta() {
        jugarBtn.setEnabled(true);
        retirarseBtn.setEnabled(true);
        cantidadApostarSpnr.setEnabled(true);
    }
    
    public void desactivarControlesApuesta() {
        jugarBtn.setEnabled(false);
        retirarseBtn.setEnabled(false);
        cantidadApostarSpnr.setEnabled(false);
    }

    private void reiniciarJuego() {
        bloquearModosJuego();
        aceptarMonedasBtn.setEnabled(true);
        retirarseBtn.setEnabled(false);
        cantidadApostarSpnr.setValue(1);
        cantidadInicialSpnr.setValue(1);
        cantidadApostarSpnr.setEnabled(false);
        cantidadInicialSpnr.setEnabled(true);
        jugarBtn.setEnabled(false);
        contenedorImagenesPanel.removeAll();
        saldoLbl.setText("");
        modoJuego = null;
        imagenes = null;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptarMonedasBtn;
    private javax.swing.JMenu acercaDeMenu;
    private javax.swing.JMenu ayudaMenu;
    private javax.swing.JSpinner cantidadApostarSpnr;
    private javax.swing.JSpinner cantidadInicialSpnr;
    private javax.swing.JPanel contenedorImagenesPanel;
    private javax.swing.JMenuItem facilMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenu juegoMenu;
    private javax.swing.JButton jugarBtn;
    private javax.swing.JMenuBar menuPrincipal;
    private javax.swing.JMenuItem normalMenuItem;
    private javax.swing.JMenuItem proMenuItem;
    private javax.swing.JButton retirarseBtn;
    private javax.swing.JLabel saldoLbl;
    // End of variables declaration//GEN-END:variables
}
